( function( $ ) {

	angular.module( 'translatedbyus', [ 'ngRoute', 'localytics.directives', 'ngDropzone', 'angular-google-analytics', 'braintree-angular', 'metatags', 'ngCookies' ] )

		.constant( 'clientTokenPath', '/app/braintree-token.php' )

		.config( [ '$provide', 'AnalyticsProvider', function( $provide, AnalyticsProvider ) {

		    $provide.decorator( '$locale', [ '$delegate', function( $delegate ) {
		        $delegate.NUMBER_FORMATS.DECIMAL_SEP = ',';
		        $delegate.NUMBER_FORMATS.GROUP_SEP = '.';
		        return $delegate;
		    } ] );

		    AnalyticsProvider.setAccount('UA-72652134-1');
		    
		} ] )

		.filter('inArray', function($filter){
		    return function(list, arrayFilter, element){
		        if(arrayFilter){
		            return $filter("filter")(list, function(listItem){
		                return arrayFilter.indexOf(listItem[element]) != -1;
		            });
		        }
		    };
		})

		.run( function( Analytics ) {} )

		.service( 'order', function() {

			var order = this;

			order.data = {
				type: 'Business',
				type_raw: 'business',
				word_price: 0.99,
				count: 0,
				estimation: '1-2',
				total: 0,
				vat: 0,
				project_name: '',
				project_text: '',
				name: '',
				email: '',
				company: '',
				fromlanguage: '',
				tolanguage: '',
				notes: '',
				source: true,
				files: {},
				has_files: false,
				no_vat: false
			};

			order.order_files = [];

		} )

		.controller( 'MainController', [ '$scope', '$location', '$http', 'order', function( $scope, $location, $http, order ) {

			var controller = this;

			$scope.changeView = function( view ){
				window.location.href = view;
	        }

	        $scope.reset_order = function() {

	        	order.data = {
					type: 'Business',
					type_raw: 'business',
					word_price: 0.99,
					count: 0,
					total: 0,
					project_name: '',
					project_text: '',
					name: '',
					email: '',
					company: '',
					fromlanguage: '',
					tolanguage: '',
					notes: '',
					source: true,
					files: {}
				};

	        }

	        $http.get( '/app/prices.php' ).then( function( response ) {
	        	$scope.prices = response.data;
	        } );

		} ] );

} )( jQuery );

jQuery(function ( $ ) {
	$('ul.nav li.dropdown').hover(function() {
		$(this).find('.dropdown-menu').stop(true, true).fadeIn(200);
	}, function() {
		$(this).find('.dropdown-menu').stop(true, true).delay(200).fadeOut(200);
	});
});

( function( $ ) {

	angular.module( 'translatedbyus' )

		.controller( 'FormController', [ '$scope', '$http', 'order', 'Analytics', '$cookies', function( $scope, $http, order, Analytics, $cookies ) {

			var controller = this;
			var uploadTimer;
			var translate_request;
			var current_api_file = 0;

			$scope.order = order.data; 
			$scope.order_files = order.files; 

			controller.files_word_count = 0;
			controller.counting = false;

			controller.upload_alert = '';

			$http.get( '/app/langs.php' ).then( function( response ) {
	        	controller.langs = response.data;
	        } );

	        $scope.send_quality_track = function( id ) {
				Analytics.trackPage( '/type-' + id );
			};

	        $scope.show_popup = function() {

				var $popup = $('.braintree-popup');

				if ( 'machine' !== $scope.order.type_raw ) {

					for( var i = 0, len = controller.langs.length; i < len; i++ ) {
				        if ( controller.langs[ i ].id === $scope.order.fromlanguage ) {
				            controller.fromlang = controller.langs[ i ].name;
				        }
				    }

					$popup.modal();

				} else {
					$scope.send_order();
				}

			};

	        $scope.send_preorder = function() {

	        	clearTimeout( uploadTimer );
	        	controller.upload_alert = '';

	        	controller.sending = true;

	        	// we don't need this anymore and it's to big
	        	$scope.order.files = {};
	        	$scope.order.files_raw = {};

				$.ajax({
				    type: "POST",
				    url : '/api/web/index.php/send_preorder',
				    data: {
				    	'zip': $scope.order.has_files,
				    	'order': $scope.order
				    },
				    success: function( response_raw ) {

				    	$('.preorder-confirmation-popup').modal();

				    },
				    error: function( error ) {
				    	console.log( error );
				    }
				});

			};

	        $scope.braintree_options = {
				onPaymentMethodReceived: function( payload ) {

					var request = $http( {
		                method: 'post',
		                url: '/app/braintree-transaction.php',
		                data: {
		                    total: $scope.order.total + $scope.order.vat,
							nonce: payload.nonce
		                },
		                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
		            } );

		            request.success( function( response ) {

		                if ( response ) {
		                	$scope.send_order( true );
		                }

		            } );

				}
            };

	        $scope.send_order = function( paid ) {

	        	paid = paid || false;

	        	controller.sending = true;

	        	if ( 'machine' == $scope.order.type_raw ) {
					var packageID = 0;
				} else if ( 'basis' == $scope.order.type_raw ) {
					var packageID = 1;
				} else {
					var packageID = 2;
				}

				var translate_request = [ {
					name : 'TranslationPackageId',
					value: packageID
				}, {
					name : 'SourceLang',
					value: $scope.order.fromlanguage
				}, {
					name : 'Name',
					value: $scope.order.project_name
				}, {
					name : 'ClientName',
					value: $scope.order.name
				}, {
					name : 'ClientEmail',
					value: $scope.order.email
				}, {
					name : 'ClientCompany',
					value: $scope.order.company
				}, {
					name : 'Notes',
					value: $scope.order.notes
				} ];

				for( var lang in $scope.order.tolanguage ) {

					translate_request = translate_request.concat( [ { 
						name: 'TargetLanguages',
						value: $scope.order.tolanguage[ lang ]
					} ] );

				}

				if ( paid ) {

					translate_request = translate_request.concat( [ { 
						name: 'PaymentStatus',
						value: 1
					} ] );
					
				}

				if ( $scope.order.source == 'file' ) {

					$.each( $scope.order.files_raw, function( index, file ) {

						controller.read_file( file ).done( function( result ) {
							translate_request = translate_request.concat( result );
						} );

					});

					current_api_file = 0;

				} else {

					translate_request = translate_request.concat( [ { 
						name: 'Text',
						value: $scope.order.project_text
					} ] );

				}

				if ( $('.braintree-popup').hasClass('in') ) {

					$('.braintree-popup').modal( 'hide' ).on('hidden.bs.modal', function () {
						controller.api_request( translate_request );
					});

				} else {

					controller.api_request( translate_request );

				}

			};

			controller.api_request = function( request ) {

				console.log( request );

				$.ajax( {
					url: 'https://tms.translatedbyus.com/projectt/api/orderadd', 
					type: 'POST',
					data: request,
					success: function( res ) {

						console.log( res );

						window.google_trackConversion( {
							google_conversion_id: 943361506, 
							google_conversion_label: '8qtUCKCd1mQQ4pvqwQM',
							google_conversion_language: "en",
							google_conversion_format: "3",
							google_conversion_color: "ffffff",
							google_conversion_value: 50.00,
							google_conversion_currency: "DKK",
							google_remarketing_only: false
						} );

						controller.sending = false;
						$scope.order.files_raw = {};
						$cookies.putObject( 'tbu_order_details', $scope.order );

						$scope.send_order_confirmation().done( function() {
							window.location.href = 'ordrebekraeftelse';							
						} );

					},
					error: function( res, status, error ) {
						console.log( res );
					}
				} );

			}

			controller.read_file = function( file ) {

				var reader = new FileReader();
				var result = '';
				var dfd = $.Deferred(); 

				reader.addEventListener("load", function(e) {

					result = [ {
						name: "FileToUpload[" + current_api_file + "][FileName]",
						value: file.name
					}, { 
						name: "FileToUpload[" + current_api_file + "][FileContent]",
						value: reader.result.slice( reader.result.indexOf( ',' ) + 1 )
					} ];

					current_api_file++;

					dfd.resolve( result );

				}, false);

				reader.readAsDataURL( file );

				return dfd.promise();

			}

			$scope.count_words = function( resetcount ) {

				resetcount = resetcount || false;

				var textarea_val = $scope.order.project_text;

				if ( textarea_val ) {

					$scope.order.count = textarea_val.match(/\S+/g).length;

				} else if ( $scope.order.files ) {

					controller.files_word_count = 0;
	
					$.each( $scope.order.files, function( key, value ) {
						controller.files_word_count += value;
					});

					$scope.order.count = controller.files_word_count;

				} else {

					$scope.order.count = 0;

				}

				$scope.calc_delivery_time();

				$scope.calc_total();

			}

			$scope.calc_total = function() {

				if ( $scope.order.tolanguage ) {
					$scope.order.total = Math.round( $scope.order.count * $scope.order.word_price * $scope.order.tolanguage.length * 1000 ) / 1000;
					
					if ( $scope.order.no_vat ) {
						$scope.order.vat = 0;
					} else {
						$scope.order.vat = $scope.order.total * 0.25;
					}

				} else {
					$scope.order.total = 0;
					$scope.order.vat = 0;
				}

			}

			$scope.calc_delivery_time = function() {

				console.log( $scope.order.count );

				if ( $scope.order.count <= 2000 ) {

					if ( $scope.order.count <= 1000 ) {
						$scope.order.estimation = '1-2';
					} else {
						$scope.order.estimation = '2-3';
					}

				} else {

					var days = Math.floor( $scope.order.count / 2000 ) + 2;

					$scope.order.estimation = days + '-' + ( days + 1 );

				}

			}

			controller.dropzoneConfig = {
				url: 'https://tms.translatedbyus.com/projectt_test/api/filessave',
			    previewsContainer: ".dropzone-previews",
			    uploadMultiple: true,
			    parallelUploads: 100,
			    maxFiles: 100,
			    addRemoveLinks: true,
			    dictCancelUpload: 'Annulér upload',
			    dictRemoveFile: 'Fjern fil',
			    dictMaxFilesExceeded: 'Du kan kun uploade én fil',
			}

			controller.dropzone_successmultiple = function( files, res ) {

				$scope.order.files_raw = files;

				$scope.order.has_files = res;

				uploadTimer = setTimeout( function() {
					controller.upload_alert = 'Tæller ord...';
					$scope.$apply();
				}, 2000 );

				uploadTimer = setTimeout( function() {
					controller.upload_alert = 'Tæller stadig ord - vent venligst...';
					$scope.$apply();
				}, 5000 );

				controller.counting = true;

		        $.ajax({
				    type: "POST",
				    url : 'https://tms.translatedbyus.com/projectt_test/api/filewordcount',
				    data: res,
				    success: function( resp ) {
				    	
				    	clearTimeout( uploadTimer );
						controller.upload_alert = '';
						$scope.$apply();

						$.each( resp.files, function( rkey, rvalue ) {
							$scope.order.files[ rvalue.fileName ] = rvalue.wordsCount;
						} );

						$scope.count_words();

						controller.counting = false;

				    },
				    error: function( error ) {
				    	console.log( error );
				    }
				});

			}

			controller.dropzone_removedfile = function( file ) {

			    delete $scope.order.files[ file['name'] ];

			    if ( $.isEmptyObject( $scope.order.files ) ) {
			    	$scope.order.source = true;
			    }

		  		$scope.count_words( true );
		  		$scope.$apply();

			}

			controller.dropzone_sending = function( file, xhr, formData ) {
				$scope.order.source = 'file';
				$scope.$apply();
			    formData.append( 'from', 'da' );
			    formData.append( 'to', 'en' );
			}

			$scope.send_mail = function( form, upload_link ) {

				$.ajax({
				    type: "POST",
				    url : '/api/web/index.php/sendMail',
				    data: {
				    	email: $scope.order.email,
				        content: $scope.order.project_text
				    },
				    success: function( msg ) {
				    	console.log( msg );
				    },
				    complete: function( r ) {
				    	//console.log(r);
				    },
				    error: function( error ) {
				    	console.log( "Error in sending Mail " + error );
				    }
				});

			}

			$scope.send_order_confirmation = function() {

				var dfd = $.Deferred();

				$.ajax({
				    type: "POST",
				    url : '/api/web/index.php/sendOrderConfirmation',
				    data: $scope.order,
				    success: function( msg ) {
				    	console.log( msg );
				    },
				    complete: function( r ) {
				    	dfd.resolve();
				    },
				    error: function( error ) {
				    	console.log( "Error in sending Mail " + error );
				    }
				});

				return dfd.promise();

			}

		} ] );

} )( jQuery );

( function( $ ) {

	angular.module( 'translatedbyus' )

		.controller( 'ConfirmationController', [ '$scope', '$http', 'order', '$cookies', function( $scope, $http, order, $cookies ) {

			var controller = this;

			$scope.order = $cookies.getObject( 'tbu_order_details' );
			$cookies.remove( 'tbu_order_details' );

			if ( typeof $scope.order === 'undefined' ) {
				$scope.order = order.data;
			}

			$http.get( '/app/langs.php' ).then( function( response ) {

	        	controller.langs = response.data;

	        	for( var i = 0, len = controller.langs.length; i < len; i++ ) {
			        if ( controller.langs[ i ].id === $scope.order.fromlanguage ) {
			            controller.fromlang = controller.langs[ i ].name;
			        }
			    }

	        } );

	        $scope.print_order = function() {

	        	$('.section.order-confirmation').printElement( {
	        		leaveOpen: true
	        	} );

	        }

		} ] );

} )( jQuery );

( function( $ ) {

	angular.module( 'translatedbyus' )

		.controller( 'ArchiveController', [ '$scope', function( $scope ) {

			$(document).ready(function () {

				c3.generate({
					bindto: '#chart_pairs',
					data: {
						columns: [
							['Dansk > Engelsk', 188444],
							['Engelsk > Dansk', 130016],
							['Engelsk > Svensk', 105636],
							['Engelsk > Svensk', 105636],
							['Dansk > Svensk', 104499],
							['Dansk > Finsk', 122164],
							['Dansk > Norsk', 81319],
							['Dansk > Hollandsk', 62551],
							['Dansk > Fransk', 48876],
							['Dansk > Tysk', 77726],
							['Other', 635397]
						],
						type: 'pie'
					}
				});

				c3.generate({
					bindto: '#chart_world',
					data: {
						columns: [
							['Europa', 70],
							['Asien', 14],
							['Ameria, syd & nord', 12],
							['Afrika', 4]
						],
						type: 'bar'
					}
				});

				c3.generate({
					bindto: '#chart_types',
					data: {
						columns: [
							['Produkttekster', 18],
							['Emballage', 17],
							['Marketing', 17],
							['Tekniske manualer', 13],
							['Juridiske tekster', 13],
							['Faglige tekster', 8],
							['Præsentationer', 7],
							['Diverse', 7]
						],
						type: 'donut'
					}
				});

				c3.generate({
					bindto: '#chart_quality',
					data: {
						columns: [
							['Maskinoversættelse', 11],
							['Basis', 22],
							['Business', 67]
						],
						type: 'donut'
					}
				});

				c3.generate({
					bindto: '#chart_formats',
					data: {
						columns: [
							['MS Word', 24],
							['PDF', 16],
							['MS Excel', 14],
							['MS Powerpoint', 13],
							['HTML', 11],
							['InDesign', 7],
							['XML', 6],
							['Andre', 9]
						],
						type: 'bar'
					}
				});

			});

		} ] );

} )( jQuery );

( function( $ ) {

	angular.module( 'translatedbyus' )

		.controller( 'HjemmesideController', [ '$scope', '$http', function( $scope, $http ) {

			var controller = this;

			controller.sending = false;
			controller.message = '';

			controller.form = {
				url: '',
				email: ''
			}

	        $scope.send = function() {

	        	controller.sending = true;

	        	$.ajax({
				    type: "POST",
				    url : '/api/web/index.php/sendHjemmeside',
				    data: controller.form,
				    success: function( msg ) {
				    	console.log( msg );
				    	controller.sending = false;
				    	controller.message = 'Besked sendt';
				    	controller.form = {
							url: '',
							email: ''
						}
						controller.formdom.$setPristine();
					    controller.formdom.$setUntouched();
						$scope.$apply();
				    },
				    complete: function( r ) {

				    },
				    error: function( error ) {
				    	console.log( "Error in sending Mail " + error );
				    }
				});

	        }

		} ] );

} )( jQuery );

( function( $ ) {

	angular.module( 'translatedbyus' )

		.controller( 'PrivatController', [ '$scope', '$http', function( $scope, $http ) {

			var controller = this;

			controller.sending = false;
			controller.message = '';

			controller.form = {
				name: '',
				email: '',
				fromlanguage: '',
				tolanguage: '',
				instructions: '',
				files: false
			}

			$http.get( '/app/langs.php' ).then( function( response ) {
	        	controller.langs = response.data;
	        } );

	        $scope.send = function() {

	        	controller.sending = true;

	        	$.ajax({
				    type: "POST",
				    url : '/api/web/index.php/sendPrivat',
				    data: controller.form,
				    success: function( msg ) {
				    	console.log( msg );
				    	controller.sending = false;
				    	controller.message = 'Besked sendt';
				    	controller.form = {
							url: '',
							email: '',
							fromlanguage: '',
							tolanguage: '',
							instructions: '',
							files: false
						}
						controller.dropzone.removeAllFiles(true);
						controller.formdom.$setPristine();
					    controller.formdom.$setUntouched();
						$scope.$apply();
				    },
				    complete: function( r ) {

				    },
				    error: function( error ) {
				    	console.log( error );
				    }
				});

	        }

	        controller.dropzoneConfig = {
				url: '/api/web/index.php/files_save',
			    previewsContainer: ".dropzone-previews",
			    uploadMultiple: true,
			    parallelUploads: 100,
			    maxFiles: 100,
			    addRemoveLinks: false,
			    dictCancelUpload: 'Annulér upload',
			    dictRemoveFile: 'Fjern fil',
			    dictMaxFilesExceeded: 'Du kan kun uploade én fil',
			}

			controller.dropzone_successmultiple = function( files, response ) {

				controller.form.files = JSON.parse( response );
				$scope.$apply();

			}

			controller.dropzone_sending = function( file, xhr, formData ) {
			    formData.append( 'from', 'da' );
			    formData.append( 'to', 'en' );
			}

		} ] );

} )( jQuery );
